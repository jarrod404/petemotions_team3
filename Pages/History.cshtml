@page
@model HistoryModel
@{
    ViewData["Title"] = "History page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
</head>
<h1>Files</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FileUpload[0].FileContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileUpload[0].fileDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileUpload[0].emotion)
            </th>
        </tr>
    </thead>
</table>

<!-- Chart.js-->
<script
src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>

<!-- full calendar -->
<script src="
https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js
"></script>

<div class="text-center">

    <h1 class="display-4">History page</h1>
    
</div>

<div class = "parent" style = "width:1000px;">
<div class = "child" style = "width:500px; float:left;">
  <canvas id="myChart" width="200" height="100" ></canvas>

<script>
        let happyCount = 0;
        let sadCount = 0;
        let angryCount = 0;
        let otherCount = 0;

            const fileUploadData = @Html.Raw(Json.Serialize(Model.FileUpload));

            // Iterate through file upload data
            fileUploadData.forEach(item => {
                console.log("Processing emotion:", item.emotion);

                switch (item.emotion) {
                    case 0:
                        happyCount++;
                        break;
                    case 1:
                        sadCount++;
                        break;
                    case 2:
                        angryCount++;
                        break;
                    default:
                        otherCount++;
                        break;
                }
            });

    const xValues = ["Happy", "Sad", "Angry", "Other"];
    const yValues = [happyCount, sadCount, angryCount, otherCount];
    const barColors = ["green", "blue","red", "purple"];

            new Chart("myChart", {
  type: "pie",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    title: {
      display: true,
      text: "Emotions Breakdown"
    }
  }
});
</script>


</div>
   
<!-- <script src="fullcalendar/dist/index.global.js"></script>
<script> -->

<div class = "child" style = "width:500px; float:right;">
 <script> 

      document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth',
          selectable: true,
          eventClick: function(info) {
                     alert('On this day, your pets emotion was: ' + info.event.title);
                  
                     info.el.style.borderColor = 'red';
                    
          },
          events: [
          {
            id: 'a',
            daysOfWeek : ['1', '4'],
            title: 'sad',
            startRecur: '2024-04-01', 
            endRecur: '2024-04-30',
            backgroundColor: '#0000FF'
          },
          {
            id: 'b',
            daysOfWeek : ['2', '5'],
            title: 'happy',
            startRecur: '2024-04-01',
            endRecur: '2024-04-30',
            backgroundColor: '#355e3b'
          }, 
          {
            id: 'c',
            daysOfWeek : ['3', '6'],
            title: 'angry',
            startRecur: '2024-04-01',
            endRecur: '2024-04-30', 
           // endTime: '11:59'
           backgroundColor: '#FF0000'
          },
          {
            id: 'd',
            daysOfWeek : ['0'],
            title: 'other',
            startRecur: '2024-04-01',
            endRecur: '2024-04-30', 
           // endTime: '11:59'
           backgroundColor: '#800080'
          }
          ]
        });
        var event1 = calendar.getEventById('a')
        var event2 = calendar.getEventById('b')
        var event3 = calendar.getEventById('c')
        var event4 = calendar.getEventById('d')
       //var start1 = event1.start
        //var start2 = event2.startRecur
      //  var end2 = event2.endRecur
       //var startTime2 = event2.startTime
       
       // var endTime = event.end
      //  console.log(start1.toISOString())
      // console.log(start2.toISOString())
        calendar.render();
      });

    </script>
<body>
    <div id='calendar'></div>
    
  </body>
</div>
</div>


